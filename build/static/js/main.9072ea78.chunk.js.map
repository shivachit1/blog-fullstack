{"version":3,"sources":["services/user.js","services/blogs.js","reducers/notificationReducer.js","reducers/userReducer.js","components/Navbar.js","components/Notification.js","components/LoginForm.js","reducers/blogsReducer.js","components/BlogForm.js","components/Togglable.js","components/Blog.js","components/BlogList.js","components/UserList.js","components/User.js","components/BlogDetails.js","App.js","reducers/usersReducer.js","store.js","index.js"],"names":["logInUser","user","a","axios","post","res","data","getAllUsers","get","baseUrl","token","getAll","then","create","newBlog","config","headers","Authorization","createNewComment","id","comment","update","put","response","remove","delete","setToken","newToken","initialState","successMessage","errorMessage","timeoutID","setSuccessNotification","content","duration","dispatch","clearTimeout","type","setTimeout","clearNotification","setErrorNotification","reducer","state","action","initialUser","username","name","payload","Navigation","useDispatch","useSelector","loggedUser","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","Nav","className","Link","href","as","style","margin","fontSize","fontWeight","to","Button","onClick","window","localStorage","removeItem","Notification","notification","Alert","LoginForm","useHistory","useState","setUsername","password","setPassword","handleChange","event","target","value","Form","onSubmit","e","preventDefault","userService","setItem","JSON","stringify","blogService","Group","Label","Control","placeholder","onChange","autoComplete","sortBlogs","blogsToBeSorted","sort","b","likes","createNewBlog","blog","title","author","console","log","likeBlog","newState","map","stateAfterDelete","filter","commentedBlog","Blogs","BlogForm","toggle","url","setNewBlog","prevState","addBlog","current","toggleVisibility","marginTop","marginBottom","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","Card","padding","buttonLabel","children","displayName","Blog","border","borderWidth","borderColor","BlogList","blogs","UserList","users","Table","striped","length","User","userId","useParams","find","item","BlogDetails","blogId","addComment","updatingBlog","updatedBlog","confirm","marginLeft","comments","App","blogFormRef","useRef","useEffect","loggedUserJSON","getItem","parse","saveUser","exact","path","render","combineReducers","blogsReducer","userReducer","usersReducer","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9072ea78.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\n// POST request for logging user with given username and password\nconst logInUser = async user => {\n  const res = await axios.post(baseUrl,user)\n  return res.data\n}\n\n// POST request for logging user with given username and password\nconst getAllUsers = async () => {\n  const res = await axios.get('/api/users')\n  return res.data\n}\n\nexport default { logInUser, getAllUsers }","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\n// setting token for authorization after user login\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n// getting all blogs\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\n// creating new blog with sending token for authorization\nconst create = async newBlog => {\n  const config = {\n    headers:{ Authorization:token },\n  }\n  // POST request sending along with authorization header\n  const res = await axios.post(baseUrl, newBlog, config)\n  return res.data\n}\n// creating new blog comment \nconst createNewComment = async (id, comment) => {\n  \n  // POST request\n  const res = await axios.post(`${baseUrl}/${id}/comments`, comment)\n  return res.data\n}\n\n// updating blog by given id with authorization header\nconst update = (id, newBlog) => {\n  \n  const request = axios.put(`${baseUrl}/${id}`,newBlog)\n  return request.then(response => response.data)\n}\n\n// updating blog by given id with authorization header\nconst remove = (id) => {\n  const config = {\n    headers:{ Authorization:token },\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, createNewComment, update, remove, setToken }","const initialState = {\n  successMessage:'',\n  errorMessage:''\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        \n      case 'SHOW_SUCCESS_NOTIFICATION' :\n        \n        return {\n          ...state,\n          successMessage:action.successMessage,\n        }\n      case 'SHOW_ERROR_NOTIFICATION' :\n        \n        return {\n          ...state,\n          errorMessage:action.errorMessage\n        }\n\n      case 'CLEAR_NOTIFICATION' :\n        return {\n          successMessage:'',\n          errorMessage:''\n        }\n\n      default: return state\n    }\n  }\n\n  var timeoutID='';\n  export const setSuccessNotification = (content,duration) => {\n    return async dispatch => {\n        if(timeoutID!==''){\n            clearTimeout(timeoutID)\n        }\n        dispatch({\n          type: 'SHOW_SUCCESS_NOTIFICATION',\n          successMessage: content\n        })\n        timeoutID = setTimeout(() => {\n            dispatch(clearNotification())\n          }, duration)\n\n      }\n   \n  }\n\n  export const setErrorNotification = (content,duration) => {\n    return async dispatch => {\n        if(timeoutID!==''){\n            clearTimeout(timeoutID)\n        }\n        dispatch({\n          type: 'SHOW_ERROR_NOTIFICATION',\n          errorMessage:content\n        })\n        timeoutID = setTimeout(() => {\n            dispatch(clearNotification())\n          }, duration)\n\n      }\n   \n  }\n\n  export const clearNotification = () => {\n    return {\n        type: 'CLEAR_NOTIFICATION',\n      }\n  }\n\n\n  export default reducer","import userService from '../services/user'\nimport blogService from '../services/blogs'\nimport { setSuccessNotification, setErrorNotification } from './notificationReducer'\n\nconst initialUser = {\n  username:'',\n  name:'',\n  token:''\n}\nconst reducer = (state = initialUser, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.payload\n    \n    case 'SAVE_USER':\n      return action.payload\n  \n    case 'LOGOUT':\n      return initialUser\n\n    default: return state\n  }\n}\n\nexport const getAllUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAllUsers()\n    dispatch({\n      type: 'GET_ALL_USERS',\n      payload: users\n    })\n  }\n}\n\nexport const loginUser = (user) => {\n  return async dispatch => {\n    try {\n      const loggedUser = await userService.logInUser(user)\n        \n      dispatch({\n          type: 'LOGIN',\n          payload: loggedUser\n      })\n      \n      // storing logged user to local storage with key \"loggedBlogappUser\" in json format\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(loggedUser)\n      )\n      // setting token for blog service\n      blogService.setToken(loggedUser.token)\n\n      dispatch(setSuccessNotification(`${loggedUser.name} logged In`,5000))\n\n\n    } catch (exception) {\n      // setting error message if user login is unsuccessful\n     dispatch(setErrorNotification('wrong credentials', 5000))\n    }\n    \n  }\n}\n\nexport const saveUser = (user) => {\n  return async dispatch => {\n        \n      dispatch({\n          type: 'SAVE_USER',\n          payload: user\n      })\n      // setting token for blog service\n      blogService.setToken(user.token)\n\n      dispatch(setSuccessNotification(`${user.name} logged In`,5000))\n  }\n}\n\nexport const logOutUser = () => {\n   return async dispatch => {\n    dispatch({\n      type: 'LOGOUT'\n    })\n    // clearing local store user data on log out\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n}\n\n\nexport default reducer","import React from 'react'\nimport { Link } from \"react-router-dom\" \nimport { useSelector, useDispatch } from 'react-redux'\nimport {logOutUser} from '../reducers/userReducer'\nimport {Navbar, Nav, Button} from 'react-bootstrap'\nconst Navigation = () => {\n    \n    const dispatch = useDispatch()\n    const user = useSelector(state => state.loggedUser)\n\n    const logOut= () => {\n     dispatch(logOutUser())\n    }\n\n    return(\n       \n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#\" as=\"span\">\n              <Link style={{margin:10,fontSize: 20,fontWeight:'bold'}} to=\"/blogs\">Blogs</Link>\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              <Link style={{margin:10,fontSize: 20,fontWeight:'bold'}} to=\"/users\">Users</Link>\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              {user\n                ? <div><strong>{user.name}</strong> logged in <Button variant=\"danger\" onClick={logOut}>Logout</Button></div>\n                : <Link style={{margin:10}} to=\"/login\">login</Link>\n              }\n          </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n}\n\nexport default Navigation","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport {Alert} from 'react-bootstrap'\n\nconst Notification = () => {\nconst successMessage = useSelector(state => state.notification.successMessage)\nconst errorMessage = useSelector(state => state.notification.errorMessage)\n  \nif(successMessage==='' && errorMessage===''){\n    return null\n  }\n  if(errorMessage!==''){\n    return <Alert variant=\"danger\">{errorMessage}</Alert>\n  }\n  if(successMessage!==''){\n    return <Alert variant=\"success\">{successMessage}</Alert>\n  }\n}\n\nexport default Notification\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../reducers/userReducer'\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  // handling changes in login form input\n  // target is retrieved with input name\n  const handleChange = (event) => {\n    if (event.target.name === 'username') {\n      setUsername(event.target.value)\n    } else if (event.target.name === 'password') {\n      setPassword(event.target.value)\n    }\n  }\n\n  // handling form submit and calling handleLogin method of App.js with username and password\n  const logIn = (e) => {\n    e.preventDefault()\n    dispatch(loginUser({ username, password }))\n    setUsername('')\n    setPassword('')\n    //history.push('/blogs',{ from: \"LoginForm\" })\n  }\n\n  return (\n    <div className=\"loginForm\">\n      <h2>Log in to application</h2>\n      <Form onSubmit={logIn}>\n        <Form.Group>\n          <Form.Label>username:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            placeholder=\"username\"\n            onChange={handleChange}\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"password\"\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import blogService from '../services/blogs'\nimport { setSuccessNotification, setErrorNotification } from './notificationReducer'\n\nconst sortBlogs = (blogsToBeSorted) => {\n  // sort by value descending order (higher likes to lowest)\n    const sortedBlogs = blogsToBeSorted.sort( (a, b) => {\n      return b.likes - a.likes\n    })\n    return sortedBlogs\n}\n\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return sortBlogs(action.payload)\n\n    case 'NEW_BLOG':\n      return [...state,action.payload]\n    \n    case 'LIKE':\n      const likeBlog = action.payload\n      const newState = state.map(blog => blog.id === likeBlog.id ? likeBlog : blog)\n      return sortBlogs(newState)\n    \n    case 'REMOVE_BLOG':\n        const id = action.payload\n        const stateAfterDelete = state.filter(blog => blog.id !== id)\n        return sortBlogs(stateAfterDelete)\n    case 'NEW_COMMENT':\n      const commentedBlog = action.payload\n      const Blogs = state.map(blog => blog.id === commentedBlog.id ? commentedBlog : blog)\n      return sortBlogs(Blogs)\n  \n    default: return state\n  }\n}\n\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload:blogs\n    })\n  }\n}\n\nexport const createNewBlog = (blog) => {\n   return async dispatch => {\n     try {\n      const newBlog = await blogService.create(blog)\n      dispatch({\n        type: 'NEW_BLOG',\n        payload: newBlog\n      })\n      dispatch(setSuccessNotification(`a new blog ${newBlog.title} by ${newBlog.author} added`,3000))\n     } catch (error) {\n      dispatch(setErrorNotification('Error creating new blog', 5000))\n     }\n   \n  }\n}\nexport const likeBlog = (id,blog) => {\n  return async dispatch => {\n    try {\n      const updatedBlog = await blogService.update(id, blog)\n      dispatch({\n        type: 'LIKE',\n        payload: updatedBlog\n      }) \n      dispatch(setSuccessNotification(`${updatedBlog.title} likes increased by 1`,5000))\n    } catch (error) {\n      dispatch(setErrorNotification('Blog cannot be updated', 5000))\n    }\n    \n  }\n}\n\n\nexport const removeBlog = (id) => {\n    return async dispatch => {\n      try {\n        await blogService.remove(id)\n      dispatch({\n        type: 'REMOVE_BLOG',\n        payload: id\n      })\n      dispatch(setSuccessNotification(`blog is deleted`,5000))\n    } catch (error) {\n      dispatch(setErrorNotification('Blog cannot be deleted', 5000))\n    \n    }\n       \n    }\n  }\n\n  export const createNewComment = (id, comment) => {\n    return async dispatch => {\n      try {\n        console.log(id + comment)\n       const newBlog = await blogService.createNewComment(id, comment)\n       dispatch({\n         type: 'NEW_COMMENT',\n         payload: newBlog\n       })\n       dispatch(setSuccessNotification(`a comment added to the blog`,3000))\n      } catch (error) {\n       dispatch(setErrorNotification('Error commenting on blog', 5000))\n      }\n    \n   }\n }\n\nexport default reducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createNewBlog } from '../reducers/blogsReducer'\nimport { Button, Card, Form } from 'react-bootstrap';\n\nconst BlogForm = ({ toggle }) => {\n  \n  const dispatch = useDispatch()\n  const [newBlog, setNewBlog] = useState({ title:'', author:'',url:'' })\n\n  const handleChange = (e) => {\n    // any changes to input is assigned to user object\n    const { name, value } = e.target\n    setNewBlog(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n  const addBlog = async (e) => {\n    e.preventDefault()\n    // adding newly created blog to blogs from response data\n    dispatch(createNewBlog(newBlog))\n    toggle.current.toggleVisibility()\n    setNewBlog({ title:'', author:'',url:'' })\n  }\n\n  return (\n    <div>\n      <h2>Create new Blog</h2>\n      <Form onSubmit={addBlog}>\n        <Form.Group>\n        <Form.Label>Title:</Form.Label>\n          <Form.Control\n             id=\"title\"\n             name = \"title\"\n             value={newBlog.title}\n             placeholder=\"Title\"\n             onChange={handleChange}\n          />\n          <Form.Label>Author:</Form.Label>\n          <Form.Control\n             id=\"author\"\n             name = \"author\"\n             value={newBlog.author}\n             placeholder=\"Author\"\n             onChange={handleChange}\n          />\n          <Form.Label>URL:</Form.Label>\n          <Form.Control\n             id=\"url\"\n             name = \"url\"\n             value={newBlog.url}\n             placeholder=\"Url\"\n             onChange={handleChange}\n          />\n          <Button style={{marginTop:10,marginBottom:10}} variant=\"primary\" type=\"submit\">create</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\n\nexport default BlogForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Card } from 'react-bootstrap';\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  // assigning reference to component\n  useImperativeHandle(ref , () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <Card className=\"my-auto\" style={{padding:25}}>\n      <div style={hideWhenVisible}>\n        <Button variant=\"success\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <Button variant=\"danger\" onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </Card>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\" \nconst Blog = ({ blog }) => {\n\n\n  const blogStyle = {\n    padding: 15,\n    margin:10,\n    border: 'solid',\n    borderWidth: 1,\n    borderColor:'green',\n    marginBottom: 8\n  }\n\n\n  return (\n    <Card style={blogStyle} id=\"blog\">\n      <Link to={`/blogs/${blog.id}`} className=\"blogTitle\">\n        <h6>{blog.title} {blog.author}</h6>\n        </Link>\n    </Card>\n  )\n\n}\n\nexport default Blog\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Blog from './Blog'\n\nconst BlogList = () => {\n\n    const blogs = useSelector( state => state.blogs)\n\n    return (\n        <div>\n            {blogs.map((blog) => (\n            <Blog key={blog.id} blog={blog}/>\n          ))}\n        </div>\n    )\n}\n\nexport default BlogList\n","import React  from 'react';\nimport { useSelector } from 'react-redux'\nimport { Table } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nconst UserList = () => {\n    const users = useSelector (state => state.users)\n\n    return(\n        <div>\n            <h3>Users</h3>\n    \n            <Table striped>\n                <tbody>\n                    <tr>\n                        <th></th>\n                        <th>blogs created</th>\n                    </tr>\n                    {users.map(user =>\n                    <tr key={user.id}>\n                        <td>\n                        <Link to={`/users/${user.id}`}>\n                            {user.username}\n                        </Link>\n                        </td>\n                        <td>\n                            {user.blogs.length}\n                        </td>\n                    </tr>\n                    )}\n                </tbody>\n            </Table>\n            \n        </div>\n    )\n}\n\nexport default UserList","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nconst User = () => {\n    const userId = useParams().id\n    const user = useSelector(state => state.users.find(item => item.id===userId))\n    if (!user) {\n        return null\n    }\n    return(\n        <Card style={{padding:20}}>\n            <h4>{user.name}</h4>\n            <div>\n                <h5>added blogs</h5>\n                <ul>\n                    {user.blogs.map((blog)=>(\n                        <div key={blog.id}>\n                        <li>{blog.title}</li>\n                        </div>\n                     ))\n                    }   \n                </ul>\n                \n            </div>\n        </Card>\n    )\n    \n}\n\nexport default User\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { likeBlog, removeBlog, createNewComment } from \"../reducers/blogsReducer\";\nimport { Button, Card, Container } from 'react-bootstrap';\n\nconst BlogDetails = () => {\n  const dispatch = useDispatch();\n  const blogId = useParams().id;\n  const loggedUser = useSelector((state) => state.loggedUser);\n\n  const blog = useSelector((state) =>\n    state.blogs.find((item) => item.id === blogId)\n  );\n  if (!blog) {\n    return null;\n  }\n\n  const hitLike = () => {\n    const updatingBlog = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1,\n      user: blog.user.id,\n    };\n    // updating blog with new blog data (for now Likes only)\n    dispatch(likeBlog(blog.id, updatingBlog));\n  };\n\n  const handleDeleteBlog = () => {\n    var result = window.confirm(`Remove blog ${blog.title} by ${blog.author}`);\n    if (result) {\n      dispatch(removeBlog(blog.id));\n    } else {\n      console.log(\"delete blog cancelled\");\n    }\n  }\n\n  const addComment = async (e) => {\n    e.preventDefault()\n    const comment ={\n        comment:e.target.comment.value\n    }\n    // dispatching\n    dispatch(createNewComment(blog.id, comment))\n    e.target.comment.value = ''\n  }\n\n  return (\n    <Card className = \"my-auto\" style={{padding:20}}>\n        <div>\n        <div>\n        <h4>{blog.title}</h4>\n        <a href={blog.url}>{blog.url}</a>\n        <p>\n          {blog.likes} likes\n          <Button className=\"likeButton\" variant=\"info\" onClick={hitLike}>\n            like\n          </Button>\n        </p>\n        <p>added by {blog.user.name}</p>\n        {loggedUser.username === blog.user.username ? (\n          <Button className=\"deleteButton\" variant=\"danger\" onClick={handleDeleteBlog}>\n            delete\n          </Button>\n        ) : (\n          <div></div>\n        )}\n        <div>\n          <h5>comments</h5>\n          <form onSubmit={addComment}>\n            <input name=\"comment\" placeholder=\"leave comment here\" />\n            <Button type=\"submit\" style={{marginLeft:15}} variant=\"success\">add comment</Button>\n          </form>\n\n          <ul>\n            {blog.comments.map((comment) => (\n              <li key={comment}>{comment}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n        </div>\n      \n    </Card>\n  );\n};\n\nexport default BlogDetails;\n","import React, { useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Notification from \"./components/Notification\";\nimport LoginForm from \"./components/LoginForm\";\nimport BlogForm from \"./components/BlogForm\";\nimport Togglable from \"./components/Togglable\";\nimport BlogList from \"./components/BlogList\";\nimport UserList from \"./components/UserList\";\nimport User from \"./components/User\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveUser } from \"./reducers/userReducer\";\nimport { getAllUsers } from \"./reducers/userReducer\";\nimport { initializeBlogs } from \"./reducers/blogsReducer\";\n\nconst App = () => {\n  const user = useSelector((state) => state.loggedUser);\n\n  const blogFormRef = useRef();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // retrieving logged user from local storage with key \"loggedBlogappUser\"\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\");\n\n    // checking if loggedUserJSON is defined\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON);\n      dispatch(saveUser(loggedUser));\n    }\n    dispatch(getAllUsers());\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <Notification />\n    <Router>\n      {!user.username ? (\n        <LoginForm />\n      ) : (\n        <div>\n          <Navbar />\n          \n          <h2>blogs app</h2>\n          <Route\n            exact path=\"/\"\n            render={() =>\n              user ? <Redirect to=\"/blogs\" /> : <Redirect to=\"/\" />\n            }\n          />\n          <Route exact path=\"/blogs\">\n            <Togglable buttonLabel=\"Create New Blog\" ref={blogFormRef}>\n              <BlogForm toggle={blogFormRef} />\n            </Togglable>\n            <BlogList />\n          </Route>\n\n          <Route path=\"/blogs/:id\">\n            <BlogDetails />\n          </Route>\n\n          <Route exact path=\"/users\">\n            <UserList />\n          </Route>\n          <Route path=\"/users/:id\">\n            <User />\n          </Route>\n        </div>\n      )}\n    </Router>\n    </div>\n  )\n}\n\nexport default App;\n","import userService from '../services/user'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_ALL_USERS':\n      return action.payload\n\n    default: return state\n  }\n}\n\nexport const getAllUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAllUsers()\n    dispatch({\n      type: 'GET_ALL_USERS',\n      payload: users\n    })\n  }\n}\n\n\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport blogsReducer from './reducers/blogsReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\nimport usersReducer from './reducers/usersReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n    blogs: blogsReducer,\n    loggedUser: userReducer,\n    users:usersReducer,\n    notification: notificationReducer\n  })\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n    \n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport './App.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))"],"sourceRoot":""}